:root {
  --phase-hours: 24;
  --any-hours: 7;
  --font-body: "Helvetica Neue", Helvetica, Arial, sans-serif;
  --phase-any-color: green;
  --phase-odd-color: red;
  --phase-even-color: orange;
}

html,
body {
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-family: var(--font-body);
  box-sizing: border-box;

  *,
  *:before,
  *:after {
    box-sizing: inherit;
    padding: 0;
    margin: 0;
    font-size: 1em;
  }
}

body {
  font-size: 1.5625vw;
}

header {
  padding: 1em;

  p {
    font-size: 3em;
    line-height: 1.3;
  }

  span[class] {
    font-weight: bold;
  }

  &.is-odd {
    span[class] {
      color: var(--phase-odd-color);
    }
  }

  &.is-even {
    span[class] {
      color: var(--phase-even-color);
    }
  }

}

.view {
  position: relative;
  // width: 90%;
  margin: 0 auto;
  overflow: hidden;
  // border: solid 4px #000;

  footer {
    display: flex;
    justify-content: space-between;
    padding: 1em;

    span {
      font-size: 2em;
      font-weight: bold;
      text-transform: uppercase;

      &:first-child:before,
      &:last-child:after {
        // content: "\2193"; // down
        content: "\2191"; // up
        display: inline-block;
        transform: translateY(-0.175em);
      }
    }
  }
}

.phases {
  width: 200%;
  display: flex;
  justify-content: flex-start;

  &[data-current-date="even"] {
    flex-direction: row-reverse;
    justify-content: flex-end;
  }
}



[class^=phase-] {
  flex: 0 0 50%;
  display: flex;
  height: 5em;

  &.phase-odd {}

  &.phase-even {}

  [class^=location] {
    position: relative;
    display: flex;
    align-items: center;
    flex: 1;
    color: #fff;
    padding-inline: 1em;

    .details {
      font-size: 1.5em;
      left: 1em;
      position: sticky;

      .when {}

      .where {}
    }

    .delineations {
      position: absolute;
      inset: 0;
      width: 100%;
      display: flex;
      display: none; // needs work
      justify-content: space-evenly;
      align-items: flex-end;
      list-style: none;
      counter-reset: hours 1;

      li {
        position: relative;
        width: 2px;
        height: 1em;
        background: #000;

        &::after {
          position: absolute;
          left: 50%;
          bottom: 100%;
          transform: translate(-50%, -0.5em);
          content: counter(hours);
          counter-increment: hours;
          font-size: 0.5em;
        }
      }
    }

  }

  .location-any {
    flex: 0 0 calc((var(--any-hours)/var(--phase-hours))*100%);
    background: var(--phase-any-color);
    counter-reset: hours 7;
  }

  .location-here {
    background: var(--phase-odd-color);
  }

  .location-there {
    background: var(--phase-even-color);
  }

}
